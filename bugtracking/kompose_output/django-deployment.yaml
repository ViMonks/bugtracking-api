apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f local.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: django
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: django
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f local.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: django
    spec:
      containers:
      - args:
        - /start
        env:
        - name: GOOGLE_OAUTH2_KEY
          valueFrom:
            configMapKeyRef:
              key: GOOGLE_OAUTH2_KEY
              name: envs--local--django
        - name: GOOGLE_OAUTH2_SECRET
          valueFrom:
            configMapKeyRef:
              key: GOOGLE_OAUTH2_SECRET
              name: envs--local--django
        - name: IPYTHONDIR
          valueFrom:
            configMapKeyRef:
              key: IPYTHONDIR
              name: envs--local--django
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: envs--local--postgres
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: envs--local--postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: envs--local--postgres
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: envs--local--postgres
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: envs--local--postgres
        - name: USE_DOCKER
          valueFrom:
            configMapKeyRef:
              key: USE_DOCKER
              name: envs--local--django
        image: bugtracking_local_django
        imagePullPolicy: ""
        name: django
        ports:
        - containerPort: 8000
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
